name: 'Run tests on Deno'

on:
  push:
    paths:
    - '.github/workflows/deno.yml'
    - 'src/**'
    - 'tests/**'
    - 'types/**'
    - 'package.json'
    - 'pnpm-lock.yaml'
    - 'vitest.config.ts'
  pull_request:
    paths:
    - '.github/workflows/deno.yml'
    - 'src/**'
    - 'tests/**'
    - 'types/**'
    - 'package.json'
    - 'pnpm-lock.yaml'
    - 'vitest.config.ts'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        deno-version: ['v2.0', v2.1]

    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      with:
        fetch-depth: 8

    - uses: denoland/setup-deno@909cc5acb0fdd60627fb858598759246509fa755 # v2.0.2
      with:
        deno-version: ${{ matrix.deno-version }}

    - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      name: Set up dependency cache
      with:
        path: |
          ~/.cache/deno
          ~/.deno/bin
          ~/.deno/gen
          ~/.deno/deps
        key: ${{ runner.os }}-deno-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
            ${{ runner.os }}-deno-store-

    - name: Install npm dependencies
      run: deno install --allow-scripts=npm:msw@2.7.0,npm:esbuild@0.15.18

    - name: Install Playwright
      run: deno run --allow-all npm:playwright install --with-deps

    - name: Lint Source
      run: deno lint --rules-exclude=no-explicit-any --ignore=node_modules **/*.ts

    - name: Run Tests
      run: deno run --allow-all npm:vitest run
